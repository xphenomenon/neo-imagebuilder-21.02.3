# vim: ft=tmux

# rename-window to newname                   C-a , <newname> OR ^b :rename-window <newname>    
# list windows in chooseable menu            C-a "
# see keybindings                            C-a ?                                                      
# list sessions                              C-a s OR tmux ls OR tmux list-sessions                     
# split pane horizontally                    C-a "
# split pane vertically                      C-a %
# switch to another pane                     C-a o
# close other panes except the current one   C-a !
# swap location of panes                     C-a ^o
# show pane numbers                          C-a q
# swap layout                                C-a <space>

set -g base-index 1
setw -g pane-base-index 1

# bind to ^A, since ^B is vim's scroll up
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# --------------------------------------------------------------
# binds

# screen like stuff
bind C-c new-window
bind C-a last-window
#bind l last-window
#bind L last-window
#bind 6 last-window
#bind C-a switch-client -l
bind C-d detach

bind C-s choose-tree

# more intuitive keybindings for splitting
unbind %
unbind '"'
bind - split-window -v -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'


# layouts:
# even-horizontal
# even-vertical
# main-horizontal
# main-vertical
bind C-v select-layout main-vertical
bind M-v select-layout even-vertical
bind C-h select-layout main-horizontal
bind M-h select-layout even-horizontal
bind t select-layout tiled

# ^a o is cycle windows
bind @   next-layout
bind m setw monitor-activity
#bind | pipe-pane -o 'exec cat >> /tmp/tmux_#S:#I:#P'
# string interpolates:
# #(shell-command)  First line of the command's output
# #[attributes]     Colour or attribute change
# #H                Hostname of local host
# #F                Current window flag
# #I                Current window index
# #P                Current pane index
# #S                Session name
# #T                Current window title
# #W                Current window name
# ##                A literal ‘#’

# toggle statusbar
# bind w set status
bind C-w list-windows

bind A setw automatic-rename on

bind l lock-client

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"
#bind / command-prompt "find-window '%%'"
bind S command-prompt -p "swap window for:" "swap-window -t '%%'"
bind P command-prompt -p "swap pane for:" "swap-pane -t '%%'"
bind J command-prompt -p "join pane from:"  "join-pane -t '%%'"
#bind M command-prompt -p "man page for:"    "new-window 'man %% || read'"
bind M command-prompt -p "move to:"    "move-window -t '%%'"
bind C command-prompt -p "new window: command:,new window: name:" "new-window -n '%2' '%1'"

#bind = choose-buffer

# reload config without killing server
bind C-r source-file ~/.tmux.conf

# pane commands
# use below as generic target pane argument

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind < resize-pane -L 10
bind > resize-pane -R 10
bind _ resize-pane -U 10
#bind + resize-pane -D 10
bind = resize-pane -D 10

bind o rotate-window
bind Enter swap-pane -s 0
bind p previous-window
bind n next-window # redundant

# confirm before killing a window or the server
bind K confirm kill-window
bind D choose-client

# same as default except without DISPLAY, to prevent DISPLAY from being unset
# set update-environment "WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

# --------------------------------------------------------------
# sets
set  -g status-keys vi
setw -g mode-keys vi

set -s escape-time 0

#set -g status-right "#(uptime|awk '{print $11}'|sed 's/,//') #(date +%H:%M)"
#set -g status-right "#(hostname) #(date '+%Y-%m-%d %a %H:%M')"
#set -g status-right "#H %H:%M" # %d-%b-%y
#set -g status-right '#[fg=white]#(hostname)@#(host `hostname` | cut -d " " -f 4)'

#set-window-option -g window-status-current-attr bright,reverse
#set-window-option -g window-status-current-bg cyan
#set-window-option -g window-status-current-fg black
#bind -n F1 run-shell 'mpc toggle >/dev/null 2>&1'

# Statusbar properties.
set -g display-time 500 # display notifications for x seconds
#set -g status-bg default
#set -g status-bg blue
#set -g status-fg cyan
#set -g status-fg white
#set -g status-attr default
#set -g status-attr bright

# misc settings
set  -g lock-command vlock
setw -g clock-mode-colour red
# setw -g mode-mouse off
#set-option -g mouse-select-pane on

# statusbar
#set -g status-interval 30
#set -g status-justify centre
#set -g status-justify left
#set -g status-left-length 0
#set -g status-right-length 36

# colours:
# black, red, green, yellow, blue, magenta, cyan, white, colour[0..255]
# attributes: bright/bold, dim, underscore, blink, reverse, hidden, italics

# default window title colors
#setw -g window-status-fg green
#setw -g window-status-fg white
#setw -g window-status-bg default
#setw -g window-status-attr dim

# active window title colors
#setw -g window-status-current-fg cyan
#setw -g window-status-current-fg white
#setw -g window-status-current-bg default
#setw -g window-status-current-bg green
#setw -g window-status-current-attr bold

# command/message line colors
#set -g message-fg white
#set -g message-bg default
#set -g message-attr dim

# pane colors
#set -g pane-border-fg blue
#set -g pane-border-bg default

#set -g pane-active-border-fg green
#set -g pane-active-border-bg default

#Window selection
unbind `        ; bind-key `        select-window -t 0
unbind 1        ; bind-key 1        select-window -t 1
unbind 2        ; bind-key 2        select-window -t 2
unbind 3        ; bind-key 3        select-window -t 3
unbind 4        ; bind-key 4        select-window -t 4
unbind 5        ; bind-key 5        select-window -t 5
unbind 6        ; bind-key 6        select-window -t 6
unbind 7        ; bind-key 7        select-window -t 7
unbind 8        ; bind-key 8        select-window -t 8
unbind 9        ; bind-key 9        select-window -t 9
unbind 0        ; bind-key 0        select-window -t 10
unbind M-`      ; bind-key -n M-`   select-window -t 0
unbind M-1      ; bind-key -n M-1   select-window -t 1
unbind M-2      ; bind-key -n M-2   select-window -t 2
unbind M-3      ; bind-key -n M-3   select-window -t 3
unbind M-4      ; bind-key -n M-4   select-window -t 4
unbind M-5      ; bind-key -n M-5   select-window -t 5
unbind M-6      ; bind-key -n M-6   select-window -t 6
unbind M-7      ; bind-key -n M-7   select-window -t 7
unbind M-8      ; bind-key -n M-8   select-window -t 8
unbind M-9      ; bind-key -n M-9   select-window -t 9
unbind M-0      ; bind-key -n M-0   select-window -t 10

